"----------------------------------------------------------
"              yshen's custom settings
"----------------------------------------------------------
" keybindings:
" <F4>  gen ctag and cscope files for the current project
" <F5>  run make, you'd better have a Makefile
" <F12> toggle paste mode
" <leader>id run indent on the current file and save it
" <leader>tt toggle tagbar on the right
" <leader>e  toggle nerd tree on the left
"


set nospell
set mouse=v
" this will modify the existing code a lot
" make the path hard to review
" so, better turn t off
let g:spf13_keep_trailing_whitespace = 1

"-----------------------------------------------------------
"               color scheme
"----------------------------------------------------------

colorscheme molokai
let g:molokai_original = 1

"-----------------------------------------------------------
"               jump between buffers
"----------------------------------------------------------
map <space>j :bnext <CR>
map <space>k :bprevious <CR>

"-----------------------------------------------------------
"                indent the current file 
"----------------------------------------------------------
" 1.save 2.run indent 3.reopen
map <leader>id :w <CR> :!indent  --indent-level4  --blank-lines-after-declarations  --no-space-after-function-call-names  --brace-indent0 --declaration-indentation9  % <CR> :e<CR>

"-----------------------------------------------------------
"                ctags and cscope file generation
"----------------------------------------------------------
" XXX add more filetypes you wish!
" NOTICE: use absolute path for ctags and cscope by pwd
map <F4> :!ctags -R  --fields=+iaS --extra=+q `pwd` && find `pwd` -name "*.c" -o -name "*.h" -o -name "*.y" -o -name -"*.l"> cscope.files && cscope -bq -i cscope.files &&  awk '{print "syntax keyword tag "$1}' tags > ~/tags.vim <CR> :set tags=./tags <CR> :cs add cscope.out<CR>:source ~/tags.vim <CR>
" auto load tags.vim if we have it, if too big will slow down vim significantly
" autocmd BufEnter * if filereadable(expand("~/tags.vim")) | source ~/tags.vim | endif


"-----------------------------------------------------------
"                complile
"-----------------------------------------------------------
map <F5> :make <ESC>

let g:indent_guides_enable_on_vim_startup = 0

"-----------------------------------------------------------
"                OmniComplete
"-----------------------------------------------------------
set nocp
"let OmniCpp_MayCompleteDot = 1   " autocomplete after type .
"let OmniCpp_MayCompleteArrow = 1 " autocomplete after type ->
"let OmniCpp_MayCompleteScope = 1 " autocomplete after type ::
let OmniCpp_ShowPrototypeInAbbr = 1


"-----------------------------------------------------------
"               Cscope 
"----------------------------------------------------------
if has("cscope")
  set csprg=/usr/bin/cscope
  set csto=1
  set cst
  set nocsverb
  " add any database in current directory
  if filereadable("cscope.out")
     cs add cscope.out
  " else add database pointed to by environment
  elseif $CSCOPE_DB != ""
    cs add $CSCOPE_DB
  endif
  set csverb
endif


nmap <space>s :cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <space>g :cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <space>c :cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <space>t :cs find t <C-R>=expand("<cword>")<CR><CR>
nmap <space>e :cs find e <C-R>=expand("<cword>")<CR><CR>
nmap <space>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <space>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <space>d :cs find d <C-R>=expand("<cword>")<CR><CR>

